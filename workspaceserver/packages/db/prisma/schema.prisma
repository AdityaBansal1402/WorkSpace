// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id       String @id @unique @default(cuid())
  username String @unique
  password String
  avatarId String
  role     Role
  spaces   Space[]
  avatar   Avatar @relation(fields: [avatarId],references: [id])
}

model Space{
    id            String @id @unique @default(cuid())
    name          String
    width         Int
    hight         Int?
    thumbnail     String?
    adminId       String
    admin         User @relation(fields: [adminId],references: [id])
    spaceelements spaceElements[]

}

model spaceElements{
  id        String @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         String
  y         String
  space     Space @relation(fields: [spaceId],references: [id])
  element   Element @relation(fields: [elementId],references: [id])
}

model Element{
  id        String @id @unique @default(cuid())
  width     String
  hight     String
  thumbnail String
  static    Boolean
  spaceelements spaceElements[]
  mapelements   mapElements[]
}

model Map{
    id          String @id @unique @default(cuid())
    name        String
    width       Int
    hight       Int?
    thumbnail   String?
  adminId       String
  mapelements mapElements[]

}

model mapElements{
  id        String @id @unique @default(cuid())
  elementId String
  mapId     String
  x         String
  y         String
  map       Map @relation(fields: [mapId],references: [id])
  element   Element @relation(fields: [elementId],references: [id])
}

model Avatar{
  id        String @id @unique @default(cuid())
  imageurl  String?
  name      String?
  user      User[]
}

enum Role{
  Admin
  User
}